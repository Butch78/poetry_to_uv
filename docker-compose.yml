services:
  redis:
    image: redis:7.4-alpine
    container_name: redis-container
    restart: unless-stopped
    command: ["redis-server"]
    networks:
      - backend

  db:
    image: postgres:11.5-alpine
    container_name: postgres_container
    environment:
      POSTGRES_DB: feedback_db
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_USER:-postgres}
      PG_DATA: /data/postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    networks:
      - postgres
    restart: unless-stopped

  api:
    build:
      context: .
      target: ${BUILD_STAGE:-prod}
    image: feedback/feedback-api:${TAG_VERSION:-latest}
    container_name: feedback-api-container
    hostname: feedback-api
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: ./pyproject.toml
    environment:
      - PORT=${API_PORT:-5000}
      - ENVIRONMENT=${ENVIRONMENT:-dev}
    env_file:
      - ./secrets.env
    volumes:
      - .:/app
      - /app/.venv
      - ./run.py:/app/run.py
      - ./worker.py:/app/worker.py
    ports:
      - ${API_PORT:-5000}:5000
    depends_on:
      - redis
      - db
    networks:
      - backend
      - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - ${PGADMIN_PORT:-5050}:80
    networks:
      - postgres
    restart: unless-stopped
    depends_on:
      - db

networks:
  backend:
    driver: bridge
  postgres:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:
